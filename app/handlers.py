import app.keyboards as kb
from app.models import async_session, WomanCloth, ManCloth, AddCloth_Man, AddCloth_Woman
from aiogram import F, Router
from aiogram.types import (Message, CallbackQuery, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove, KeyboardButton, InputMediaPhoto)
from aiogram.filters import CommandStart, Command
from sqlalchemy import select
from aiogram.fsm.context import FSMContext
router = Router()
state = {}

man_navigation_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–ó–∞–º–æ–≤–∏—Ç–∏"), KeyboardButton(text="–î–∞–ª—ñ‚û°Ô∏è")],
                                                  [KeyboardButton(text="–ù–∞–∑–∞–¥")]],
                                        resize_keyboard=True,
                                        input_field_placeholder='–õ–∏—Å—Ç–∞–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–æ–∫...')

woman_navigation_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="üå∑–ó–∞–º–æ–≤–∏—Ç–∏üå∑"), KeyboardButton(text="üå∑–î–∞–ª—ñ‚û°Ô∏è")],
                                                    [KeyboardButton(text="–ù–∞–∑–∞–¥")]],
                                          resize_keyboard=True,
                                          input_field_placeholder='–õ–∏—Å—Ç–∞–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—Ç—Ä—ñ–ª–æ—á–æ–∫...')


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–í—ñ—Ç–∞—î–º–æ –í–∞—Å —É –Ω–∞—à–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñ <b>SecondWave Wear</b>üåä\n\n '
                         '–©–æ–± –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é.', parse_mode="HTML",
                         reply_markup=kb.menu)


@router.callback_query(F.data == '–ú–µ–Ω—é')
async def cmd_menu(callback: CallbackQuery):
    await callback.message.answer('–û–±–µ—Ä—ñ—Ç—å —â–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:', reply_markup=kb.main)


@router.callback_query(F.data == '–ù–∞–∑–∞–¥')
async def cmd_back_(callback: CallbackQuery):
    await callback.message.answer('–û–±–µ—Ä—ñ—Ç—å —â–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:', reply_markup=kb.main)


@router.message(F.text == '–ù–∞–∑–∞–¥')
async def cmd_back(message: Message):
    await message.answer("–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é...", reply_markup=ReplyKeyboardRemove())
    await message.answer('–û–±–µ—Ä—ñ—Ç—å —â–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:', reply_markup=kb.main)


@router.callback_query(F.data == 'rules')
async def rules(callback: CallbackQuery):
    await callback.message.answer('–©–æ–± –∑–∞–∫–∏–Ω—É—Ç–∏ —Ä—ñ—á –Ω–∞ –ø—Ä–æ–¥–∞–∂ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ:\n'
                                  '–ù–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"–ó–∞–∫–∏–Ω—É—Ç–∏ —Ä—ñ—á –Ω–∞ –ø—Ä–æ–¥–∞–∂"</b> —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏:\n'
                                  'üñáÔ∏è–Ø–∫—ñ—Å–Ω–µ —Ñ–æ—Ç–æ(3-5—à—Ç.)\n üñáÔ∏è–ë—Ä–µ–Ω–¥ —Ç–æ–≤–∞—Ä—É\n üñáÔ∏è–†–æ–∑–º—ñ—Ä\n üñáÔ∏è–í–∞—Ä—Ç—ñ—Å—Ç—å\n üñáÔ∏è–°—Ç–∞–Ω\n\n'
                                  '–¢–∞–∫–æ–∂ —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø—Ä–æ–¥–∞–∂—É —á–µ—Ä–µ–∑ –Ω–∞—à–æ–≥–æ –≥–∞—Ä–∞–Ω—Ç–∞:@tsukuyomitravel',
                                  reply_markup=kb.back, parse_mode="HTML")


@router.callback_query(F.data == 'catalog')
async def catalog(callback: CallbackQuery):
    await callback.message.answer('–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å –Ω–∞ —è–∫—É –≤–∏ —à—É–∫–∞—î—Ç–µ —Ä—ñ—á:', reply_markup=kb.sex)


@router.callback_query(F.data == 'sale')
async def sale(callback: CallbackQuery):
    telegram_profile_link = "https://t.me/tsukuyomitravel"  # Replace 'yourusername' with your actual Telegram username
    await callback.message.answer(f'–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏ —Ä—ñ—á –ø–∏—à—ñ—Ç—å <a href="{telegram_profile_link}">—Å—é–¥–∏</a>',
                                  parse_mode="HTML")


async def display_item(callback_or_message, item, navigation_kb):
    photos = [item.—Ñ–æ—Ç–æ1, item.—Ñ–æ—Ç–æ2, item.—Ñ–æ—Ç–æ3, item.—Ñ–æ—Ç–æ4, item.—Ñ–æ—Ç–æ5]
    photos = [photo for photo in photos if photo]

    if photos:
        media_group = [InputMediaPhoto(media=photo) for photo in photos]
        text = f"–ë—Ä–µ–Ω–¥: {item.–±—Ä–µ–Ω–¥}\n–†–æ–∑–º—ñ—Ä: {item.—Ä–æ–∑–º—ñ—Ä}\n–í–∞—Ä—Ç—ñ—Å—Ç—å: {item.–≤–∞—Ä—Ç—ñ—Å—Ç—å} –≥—Ä–Ω\n–°—Ç–∞–Ω: {item.—Å—Ç–∞–Ω}/10\n"
        media_group[0].caption = text
    else:
        media_group = [InputMediaPhoto(media='', caption=f"–ë—Ä–µ–Ω–¥: {item.–±—Ä–µ–Ω–¥}\n–†–æ–∑–º—ñ—Ä: {item.—Ä–æ–∑–º—ñ—Ä}\n–í–∞—Ä—Ç—ñ—Å—Ç—å: {item.–≤–∞—Ä—Ç—ñ—Å—Ç—å} –≥—Ä–Ω\n–°—Ç–∞–Ω: {item.—Å—Ç–∞–Ω}/10\n")]

    user_state = state[callback_or_message.from_user.id]
    user_state['current_item'] = item

    if isinstance(callback_or_message, CallbackQuery):
        await callback_or_message.message.answer_media_group(media=media_group)
        await callback_or_message.message.answer("–û–±–∏—Ä–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥—ñ—ó:", reply_markup=navigation_kb)
    else:
        await callback_or_message.answer_media_group(media=media_group)
        await callback_or_message.answer("–û–±–∏—Ä–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥—ñ—ó:", reply_markup=navigation_kb)


@router.callback_query(F.data == 'man')
async def show_men_clothes(callback: CallbackQuery):
    state[callback.from_user.id] = {'type': 'man', 'index': 0}
    await display_next_item(callback)


@router.callback_query(F.data == 'woman')
async def show_women_clothes(callback: CallbackQuery):
    state[callback.from_user.id] = {'type': 'woman', 'index': 0}
    await display_next_item(callback)


@router.message(F.text == "–î–∞–ª—ñ‚û°Ô∏è")
async def next_item(message: Message):
    if message.from_user.id in state:
        state[message.from_user.id]['index'] += 1
        await display_next_item(message)


@router.message(F.text == "üå∑–î–∞–ª—ñ‚û°Ô∏è")
async def next_item_woman(message: Message):
    if message.from_user.id in state:
        state[message.from_user.id]['index'] += 1
        await display_next_item(message)


async def display_next_item(callback_or_message):
    user_state = state[callback_or_message.from_user.id]
    index = user_state['index']
    item_type = user_state['type']

    async with async_session() as session:
        if item_type == 'man':
            result = await session.execute(select(ManCloth).offset(index).limit(1))
            items = result.scalars().all()
            navigation_kb = man_navigation_kb
        else:
            result = await session.execute(select(WomanCloth).offset(index).limit(1))
            items = result.scalars().all()
            navigation_kb = woman_navigation_kb

        if items:
            await display_item(callback_or_message, items[0], navigation_kb)
        else:
            await callback_or_message.answer("–ù–µ–º–∞—î –±—ñ–ª—å—à–µ —Ç–æ–≤–∞—Ä—ñ–≤ —É —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó.")


@router.message(F.text == "–ó–∞–º–æ–≤–∏—Ç–∏")
async def order_item(message: Message):
    user_state = state.get(message.from_user.id)
    if user_state and 'current_item' in user_state:
        item = user_state['current_item']
        if hasattr(item, 'tg_link') and item.tg_link:
            await message.answer(f"–î–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ü—ñ—î—ó —Ä–µ—á—ñ, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –ø—Ä–æ–¥–∞–≤—Ü–µ–º: {item.tg_link}")
        else:
            await message.answer("–ù–∞ –∂–∞–ª—å, –¥–ª—è —Ü—ñ—î—ó —Ä–µ—á—ñ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.")
    else:
        await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–±—Ä–∞–Ω–∏–π —Ç–æ–≤–∞—Ä.")



@router.message(F.text == "üå∑–ó–∞–º–æ–≤–∏—Ç–∏üå∑")
async def order_item_woman(message: Message):
    user_state = state.get(message.from_user.id)
    if user_state and 'current_item' in user_state:
        item = user_state['current_item']
        if hasattr(item, 'tg_link') and item.tg_link:
            await message.answer(f"–î–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ü—ñ—î—ó —Ä–µ—á—ñ, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –ø—Ä–æ–¥–∞–≤—Ü–µ–º: {item.tg_link}")
        else:
            await message.answer("–ù–∞ –∂–∞–ª—å, –¥–ª—è —Ü—ñ—î—ó —Ä–µ—á—ñ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.")
    else:
        await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–±—Ä–∞–Ω–∏–π —Ç–æ–≤–∞—Ä.")


@router.message(Command('add_cloth_to_my_DB'))
async def add_cloth(message: Message):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å –¥–æ —è–∫–æ—ó –≤–∏ —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Ä—ñ—á:",reply_markup=kb.sex_admin)


@router.message(F.text == 'add_man_cloth')
async def set_state(message: Message, state: FSMContext):
    await state.set_state(AddCloth_Man.–±—Ä–µ–Ω–¥)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –±—Ä–µ–Ω–¥—É:")


@router.message(AddCloth_Man.–±—Ä–µ–Ω–¥)
async def add_brand(message: Message, state: FSMContext):
    await state.update_data(–±—Ä–µ–Ω–¥=message.text)
    await state.set_state(AddCloth_Man.—Ä–æ–∑–º—ñ—Ä)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –æ–¥—è–≥—É:")


@router.message(AddCloth_Man.—Ä–æ–∑–º—ñ—Ä)
async def add_size(message: Message, state: FSMContext):
    await state.update_data(—Ä–æ–∑–º—ñ—Ä=message.text)
    await state.set_state(AddCloth_Man.–≤–∞—Ä—Ç—ñ—Å—Ç—å)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—Ä—Ç—ñ—Å—Ç—å –æ–¥—è–≥—É:")


@router.message(AddCloth_Man.–≤–∞—Ä—Ç—ñ—Å—Ç—å)
async def add_cost(message: Message, state: FSMContext):
    await state.update_data(–≤–∞—Ä—Ç—ñ—Å—Ç—å=message.text)
    await state.set_state(AddCloth_Man.—Å—Ç–∞–Ω)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Å—Ç–∞–Ω –æ–¥—è–≥—É:")


@router.message(AddCloth_Man.—Å—Ç–∞–Ω)
async def add_stan(message: Message, state: FSMContext):
    await state.update_data(—Å—Ç–∞–Ω=message.text)
    await state.set_state(AddCloth_Man.tg_link)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å tg_link –ø—Ä–æ–¥–∞–≤—Ü—è:")


#–î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ñ–æ—Ç–æ —ñ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –∑–∞–Ω–æ—Å–∏—Ç—å —Ü—é —Ä—ñ—á —É –±–¥